import { db } from 'logic/fb';
import firebase from 'firebase/compat/app';
import { collection, addDoc } from 'firebase/firestore';
import 'firebase/compat/firestore';

export default function useLotsOfPoints() {
  // To use in google dev tools
  window.generateLotOfPoints = addPoints;
}

function addPoints() {
  // Define the document ID and number of collections to create
  const docId = 'intruder-points';
  const numCollections = 5;

  // Define an array of possible types for the 'type' field
  const types = ['inny', 'bag', 'intruder'];

  // Loop through the desired number of collections
  for (let i = 0; i < numCollections; i++) {
    // Generate random values for each field
    const name = 'Point num ' + (i + 1);
    const centerLatitude = 50.2380583;
    const centerLongitude = 19.0331179;
    const radius = 0.002; // 0.05 degrees is about 5.6km at the equator
    const latitude = (Math.random() * (radius * 2) + (centerLatitude - radius)).toFixed(4);
    const longitude = (Math.random() * (radius * 2) + (centerLongitude - radius)).toFixed(4);
    const imageBase64 = '';
    const type = types[Math.floor(Math.random() * types.length)];

    // Create a new document in the specified collection with the random values
    addDoc(collection(db, docId), {
      name,
      location: new firebase.firestore.GeoPoint(latitude, longitude),
      img: imageBase64,
      type
    });
  }
}
